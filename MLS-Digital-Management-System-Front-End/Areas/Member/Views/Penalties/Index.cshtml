@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "License Applications";
    Layout = "~/Areas/Secretariat/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
     var apiPrefix =  Configuration.GetSection("APISettings")["API_Prefix"];

}

@section Styles {

    <style>
        .hidden {
            display: none;
        }
    </style>


}

<div class="card  w-100 h-100 d-flex justify-content-center">
    <div class="card-body">

        <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
        <!-- Button trigger modal -->
        @*<button type="button" class="btn btn-info my-3" data-bs-toggle="modal" data-bs-target="#create_penalty_modal">
            Add New Penalty
        </button>*@

        <!-- Modal -->
        <div class="modal fade" id="make_penaltyPayment_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_MakePenaltyPaymentPartial" />
        </div>
        

        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center"> Penalties In Year of Practice <strong>(@ViewBag.YearOfOperation.FormatedDate)</strong></h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="penalty_table">
                <thead>
                    <tr>
                        <th>
                            Description
                        </th>
                        <th>
                            Fee
                        </th>
                        <th>
                            Penalty Status
                        </th>
                        <th>
                            Penalty Document
                            </th>
                        <th>
                            Invoice Number
                            </th>
                        <th>
                            Amount Paid
                        </th>
                        <th>
                            Balance
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
    </script>
    <script src="~/js/MemberPenalty.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#penalty_table').DataTable({
                "processing": true,
                "serverSide": true, //?memberId="+@ViewBag.memberId,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/Penalties/paged?memberId=" + @ViewBag.memberId,
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    }
                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "reason",
                        name: "reason",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            }
                            return data; // Render the original data
                        }
                    },
                    {
                        data: "fee",
                        name: "fee",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            }
                            return '<span class="badge bg-primary bg-opacity-85 rounded-pill">MWK ' + data + '</span>';
                        }
                    },
                    {
                        data: "penaltyStatus",
                        name: "penaltyStatus",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            }
                            return data; // Render the original data
                        }
                    },
                    {
                        data: "attachments",
                        name: "attachments",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row, meta) {
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            } else {
                                if (data && data.length > 0) {
                                    return data.map((attachment) => {
                                        return `<a href="@host@apiPrefix/${attachment.filePath}" target="_blank" download="${attachment.fileName}"> Attachment <i class="bi bi-paperclip"></i></a>`;
                                    }).join('<br>');
                                } else {
                                    return '';
                                }
                            }
                        }
                    },
                    {
                        data: "invoiceRequest",
                        name: "Invoice ID",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            var invoiceNumber = row.invoiceRequest?.qbInvoiceId ?? "processing";
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            }else{
                                return invoiceNumber; // Render the original data
                            }
                            
                        }
                    },
                    {
                        data: "amountPaid",
                        name: "amountPaid",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            } else {
                                // Function to format numbers as currency
                                var formatCurrency = function (value) {
                                    return new Intl.NumberFormat('en-US', {
                                        style: 'currency',
                                        currency: 'MWK' // Change this to your desired currency
                                    }).format(value);
                                };

                                var formattedData = formatCurrency(data);
                                return '<span class="badge bg-primary bg-opacity-85 rounded-pill">' + formattedData + '</span>';
                            }
                        }
                    },
                    {
                        data: "amountRemaining",
                        name: "amountRemaining",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            var fee = row.fee

                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            } else {
                                // Function to format numbers as currency
                                var formatCurrency = function (value) {
                                    return new Intl.NumberFormat('en-US', {
                                        style: 'currency',
                                        currency: 'MWK' // Change this to your desired currency
                                    }).format(value);
                                };

                                var formattedData = formatCurrency(data);
                                var formattedFee = formatCurrency(fee);

                                if (data == 0) {
                                    return '<span class="badge bg-success bg-opacity-85 rounded-pill">' + formattedData + '</span>'
                                }
                                if (data == fee) {
                                    return '<span class="badge bg-danger bg-opacity-85 rounded-pill">' + formattedData + '</span>'
                                }
                                else if (data < fee) {
                                    return '<span class="badge bg-warning bg-opacity-85 rounded-pill">' + formattedData + '</span>'
                                }
                            }
                        }
                    },
                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                            var balance = row.amountRemaining
                            var invoiceNumber = row.invoiceRequest?.qbInvoiceId ?? null;

                            if (@ViewBag.memberId === 0) {
                                return ''; // Render nothing
                            } else {
                                if (balance == 0) {
                                    return ""
                                } else {
                                    if(invoiceNumber != null){
                                        return `
                                                    <a href='#' onclick='penaltyHandler.editForm(${data},"${tokenValue}")' type='button' class='btn btn-outline-primary mx-1 btn-sm ti ti-credit-card' title='edit'> Make Payment</a>
                                                `
                                    }else{
                                        return "";
                                    }
                                }
                            }
                        }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
