@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using System.Text.Json;
@{
    ViewData["Title"] = "CommitteeDetails";
    Layout = "~/Areas/Member/Views/shared/_Layout.cshtml";
    //bool isChairperson = ViewBag.IsChairperson;

    var host = Configuration.GetSection("APIURL")["Link"];
}

<div class="card w-100 h-100 d-flex justify-content-center">
    <div class="card-body">
        <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
         <!-- Button trigger modal -->
        <button type="button" class="btn btn-info my-3" data-bs-toggle="modal" data-bs-target="#create_committee_member_modal">
            Add Member
        </button>
      
        <!-- Modal -->
        <div class="modal fade" id="create_committee_member_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_CreateCommitteeMemberPartial" />
        </div>

       

        <h5 class="card-title fw-semibold mb-4 text-capitalize">Committee Members</h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="my_table">
                <thead>
                    <tr>
                        <th>Member Name</th>
                        <th>Member Role</th>
                        <th>Gender</th>
                        <th>Email</th>
                        <th>Contact</th>
                        @if (ViewBag.IsChairperson)
                        {
                            <th>Action</th>
                        }
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<div class="card w-100 h-100 d-flex justify-content-center">
    <div class="card-body">
        <div class="d-flex justify-content-between my-3">
            <div>
                <h5 class="card-title fw-semibold">Subcommittees</h5>
            </div>
            <!--<div>
                <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#create_subcommittee_modal">
                    Add Subcommittee
                </button>
            </div>-->
        </div>

        <!-- Modal -->
        <div class="modal fade" id="create_subcommittee_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_CreateSubcommitteePartial" />
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="subcommittee_table">
                <thead>
                    <tr>
                        <th>
                           Subcommittee Name
                        </th>
                        <th>
                           Description
                        </th>
                        <th>
                            Chairperson
                        </th>
                        <th>Parent Committee</th>
                        <th>
                            Membership Status
                        </th>
                        
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>

                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
    </script>

 <script src="~/js/CommitteeMember.js" asp-append-version="true"></script>
 <script src="~/js/Subcommittee.js" asp-append-version="true"></script>
    
    <script>
        $(document).ready(function () {
            const isChairperson = @Html.Raw(JsonSerializer.Serialize(@ViewBag.IsChairperson));

            let columns = [
                {
                    data: "memberShip.fullName",
                    name: "memberShip",
                    className: "text-left",
                    "orderable": false
                },
                {
                    data: "role",
                    name: "role",
                    className: "text-left",
                    "orderable": false
                },
                {
                    data: "memberShip.gender",
                    name: "gender",
                    className: "text-left",
                    "orderable": false
                },
                {
                    data: "memberShip.email",
                    name: "email",
                    className: "text-left",
                    "orderable": false
                },
                {
                    data: "memberShip.phoneNumber",
                    name: "contact",
                    className: "text-left",
                    "orderable": false
                }
            ];

            if (isChairperson) {
                columns.push({
                    data: "id",
                    name: "id",
                    "orderable": false,
                    render: function (data, type, row) {
                        return `
                            <a href='#' data-id="${data}" data-token="${tokenValue}" onclick='committeeMemberHandler.delete(event)' type='button' class='btn btn-outline-danger mx-1 btn-sm ti ti-trash' title='edit'> Remove</a> 
                        `;
                    }
                });
            }

            datatable = $('#my_table').DataTable({
                "processing": true,
                "serverSide": true,
                "order": [[0, "asc"]],
                ajax: {
                    url: "@host/api/CommitteeMembers/paged?committeeId=" + @ViewBag.CommitteeId,
                    type: 'get',
                    datatype: 'Json',
                    headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },
                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    }
                ],
                columns: columns,
                responsive: true,
                "autoWidth": false
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            datatable = $('#subcommittee_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/Subcommittees/GetSubcommitteeByCommitteeId?committeeId="+@ViewBag.committeeId,
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },
                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "subcommitteeName",
                        name: "subcommitteeName",
                        className: "text-left",
                        "orderable": true,  
                    },
                    {
                        data: "description",
                        name: "description",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "chairperson.user.fullName",
                        name: "chairperson.user.fullName",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "parentCommittee.committeeName",
                        name: "parentCommitteeName",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "id",
                        name: "membership status",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            let loggedInUserId = `@ViewBag.UserId`;
                            let userMembership = row.subcommitteeMemberships.find(reg => reg.memberShipId === loggedInUserId);
                            if (userMembership != null) {
                                let membershipStatus = userMembership.memberShipStatus;
                                // Now you can use membershipStatus to determine what to return
                                if (membershipStatus === 'Approved') {  // Adjust this condition based on your actual status values
                                    return `<span class="text-success">Member</span>`;
                                } else if (membershipStatus === 'Pending') {  // Example of handling a different status
                                    return `<span class="text-warning">Pending</span>`;
                                } else if (membershipStatus === 'Exited') {
                                    return `<span class="text-danger">Exited</span>`;
                                } else {
                                    return `<span class="text-danger">Not a Member</span>`;
                                }
                            } 
                            else {
                                return `<span class="text-danger">Not a Member</span>`;
                            }
                        }
                    },
                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                            let loggedInUserId = `@ViewBag.UserId`;
                            let isUserInCommittee = row.subcommitteeMemberships.find(reg => reg.memberShipId === loggedInUserId);
                            if (isUserInCommittee != null) {
                                let membershipStatus = isUserInCommittee.memberShipStatus
                                if (membershipStatus == "Approved") {
                                    if (isUserInCommittee.role == "Chairperson") {
                                        return `
                                                <a href='/member/subcommitteeThreads?subcommitteeId=${data}'  type='button' class='btn btn-outline-success mx-1 btn-sm ti  ti-hand-point-down' title='show threads'>Threads</a>
                                                <a href='/member/subcommittees/ViewMembers?subcommitteeId=${data}'  type='button' class='btn btn-outline-primary mx-1 btn-sm ti  ti-eye' title='show threads'>Members</a>
                                                <a href='/member/subcommittees/ViewMemberRequests?subcommitteeId=${data}'  type='button' class='btn btn-outline-warning mx-1 btn-sm ti  ti-eye' title='show threads'>Requests</a>
                                                <a href='#' data-id='${data}' data-token='${tokenValue}' type='button' onclick='subcommitteeHandler.exitSubcommittee(event)' title='delete' class='ti ti-trash red-icon btn btn-outline-danger btn-sm my-1 mx-1'>Exit</a>
                                            `
                                    } else {
                                        return `
                                                <a href='/member/subcommitteeThreads?subcommitteeId=${data}'  type='button' class='btn btn-outline-success mx-1 btn-sm ti  ti-hand-point-down' title='show threads'>Threads</a>
                                                <a href='/member/subcommittees/ViewMembers?subcommitteeId=${data}'  type='button' class='btn btn-outline-primary mx-1 btn-sm ti  ti-eye' title='show threads'>Members</a>
                                                <a href='#' data-id='${data}' data-token='${tokenValue}' type='button' onclick='subcommitteeHandler.exitSubcommittee(event)' title='delete' class='ti ti-trash red-icon btn btn-outline-danger btn-sm my-1 mx-1'>Exit</a>
                                            `
                                    }
                                    
                                } else if (membershipStatus == "Pending") 
                                {
                                    return ``;
                                }else{
                                    return `<a href='#' data-id='${data}' data-token='${tokenValue}' onclick='subcommitteeHandler.joinSubcommittee(event)' type='button' class='btn btn-outline-primary mx-1 btn-sm' title='edit'> <i class='bi bi-plus'></i> Join</a>`;
                                }
                            } else {
                                return `<a href='#' data-id='${data}' data-token='${tokenValue}' onclick='subcommitteeHandler.joinSubcommittee(event)' type='button' class='btn btn-outline-primary mx-1 btn-sm' title='edit'> <i class='bi bi-plus'></i> Join</a>`;

                            }
                        }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
