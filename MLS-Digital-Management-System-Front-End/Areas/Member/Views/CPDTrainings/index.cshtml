@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "CPD Trainings";
    Layout = "~/Areas/Member/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
}

@section Styles {

    <style>
        .hidden {
            display: none;
        }

        .select2-container--bootstrap-5 .select2-selection--multiple .select2-selection__choice {
            background-color: #0d6efd;
            color: #fff;
        }

        .select2-container--bootstrap-5 .select2-selection--multiple .select2-selection__choice__remove {
            color: #fff;
        }

        .select2-container--bootstrap-5 .select2-dropdown .select2-results__option--highlighted[aria-selected] {
            background-color: #0d6efd;
        }

        .select2-container--bootstrap-5 .select2-dropdown .select2-results__option[aria-selected=true] {
            background-color: #e9ecef;
        }
    </style>

    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css"
        rel="stylesheet" />

}



<div class="card  w-100 h-100 d-flex justify-content-center">
    <div class="card-body">

        <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>

        @if (ViewBag.membership)
        {


            /*@if (ViewBag.member?.CustomerId == null)
            {
            <div class="alert alert-success my-5">
            <span class="text-danger">Please contact the finance officer to update your details</span>
            </div>
            }
            else
            {

            }*/
        }
        else
        {
            <a asp-area="Member" asp-action="ViewMember" asp-controller="Home" class="btn btn-warning my-3">Complete
                Membership Details</a>
        }

        <!-- Modal -->
        <div class="modal fade" id="register_cpd_training_modal" tabindex="-1" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <partial name="_RegisterTrainingPartial" />
        </div>

        <div class="modal fade" id="cpd_invoice_modal" tabindex="-1" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <partial name="_CPDInvoicePartial" />
        </div>

        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center"> CPD's In Practice Year
            <strong>(@ViewBag.YearOfOperation.FormatedDate)</strong>
        </h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="cpd_table">
                <thead>
                    <tr>
                        <th>
                            Title
                        </th>
                        <th>
                            Duration(Hours)
                        </th>
                        <th>
                            Event Date
                        </th>
                        <th>
                            CPD Units
                        </th>
                        <th>
                            Accrediting Institution
                        </th>
                        <th>
                            Reg Status
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>

        @if (ViewBag.member?.CustomerId == null)
        {
            <div class="alert alert-success my-5">
                <span class="text-danger">Please contact the finance officer to update your details</span>
            </div>
        }
    </div>
</div>


@section Scripts {

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
        var isCustomerId = @Json.Serialize(ViewBag.CustomerId);
        var userIdGlobal = '@ViewBag.userId';
        var memberIdGlobal = '@ViewBag.memberId';
    </script>

    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/js/FileUploadHandler.js" asp-append-version="true"></script>
    <script src="~/js/CPDTraining.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#cpd_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[2, "desc"]],
                ajax: {
                    url: "@host/api/CPDTrainings/paged",
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },
                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "title",
                        name: "title",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "duration",
                        name: "duration",
                        className: "text-left",
                        "orderable": false,
                        render: function (data, type, row) {
                            return data;
                        }
                    },
                    {
                        data: "dateToBeConducted",
                        name: "dateToBeConducted",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "cpdUnitsAwarded",
                        name: "cpdUnitsAwarded",
                        className: "text-left",
                        "orderable": true,
                    },
                    {
                        data: "accreditingInstitution",
                        name: "accreditingInstitution",
                        className: "text-left",
                        "orderable": true,
                    },
                    {
                        data: "cpdTrainingRegistration",
                        name: "cpdTrainingRegistration",
                        orderable: false,
                        render: function (data, type, row) {
                            const registration = row.cpdTrainingRegistration.find(reg => reg.memberId === @ViewBag.MemberId);
                            if (!registration) {
                                const dueDate = row.registrationDueDate ? new Date(Date.parse(row.registrationDueDate)) : null;
                                const today = new Date();

                                if (dueDate) {
                                    // Calculate the time difference in milliseconds
                                    const timeDiff = dueDate.getTime() - today.getTime();
                                    // Convert the time difference from milliseconds to days
                                    const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                                    if (daysDiff < 1) {

                                        return "<span class='badge bg-danger bg-opacity-85 rounded-pill'>Registration Closed</span>";
                                    }
                                }
                                // Loop through all invoice requests
                                let userInvoiceRequest = row.invoiceRequests?.find(req => req.createdById == userIdGlobal);

                                // Check if the member is in the firm members list for a firm request
                                let firmInvoiceRequest = row.invoiceRequests?.find(req => req.requestType === "Firm" && req.firmMembers.includes(@ViewBag.MemberId+""));


                                // Check invoice status
                                if ((userInvoiceRequest && userInvoiceRequest.createdById == userIdGlobal) || (firmInvoiceRequest)) {
                                    if ((userInvoiceRequest?.status === "Generated") || (firmInvoiceRequest?.status === "Generated")) {
                                        return "<span class='badge bg-info bg-opacity-85 rounded-pill'>Invoice Generated</span>";
                                    } else if ((userInvoiceRequest?.status === "Pending") || (firmInvoiceRequest?.status === "Pending")) {
                                        return "<span class='badge bg-warning bg-opacity-85 rounded-pill'>Invoice Pending</span>";
                                    }
                                }

                                return "<span class='badge bg-danger bg-opacity-85 rounded-pill'>Not Registered</span>";
                            }

                            const { registrationStatus, deniedReason } = registration;
                            const badgeClasses = {
                                Attended: "bg-success",
                                Pending: "bg-secondary",
                                Denied: "bg-danger",
                                default: "bg-warning"
                            }[registrationStatus] || "bg-warning";

                            const badge = `<span class='badge ${badgeClasses} bg-opacity-85 rounded-pill' ${registrationStatus === "Denied" ? `data-toggle='tooltip' data-placement='right' title='${deniedReason}'` : ""}>${registrationStatus}</span>`;
                            return badge;
                        }
                    },

                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                            const dueDate = new Date(row.registrationDueDate);
                            const today = new Date();
                            var memberRegistration = row.cpdTrainingRegistration.find(registration => registration.memberId == @ViewBag.MemberId);
                            if (!memberRegistration) {
                                const dueDate = row.registrationDueDate ? new Date(Date.parse(row.registrationDueDate)) : null;
                                const today = new Date();

                                if (dueDate) {
                                    const timeDiff = dueDate.getTime() - today.getTime();
                                    const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

                                    let buttons = "<a href='/member/CPDTrainings/TrainingDetails/" + data + "' type='button' class='btn btn-outline-primary mx-1 btn-sm ti ti-eye text-lg' title='show details'> View </a>";
                                    if (daysDiff >= 1) {
                                        // Loop through all invoice requests
                                        let userInvoiceRequest = row.invoiceRequests?.find(req => req.createdById == userIdGlobal);

                                        // Check if the member is in the firm members list for a firm request
                                        let firmInvoiceRequest = row.invoiceRequests?.find(req => req.requestType === "Firm" && req.firmMembers.includes(@ViewBag.MemberId+""));

                                        if (userInvoiceRequest || firmInvoiceRequest) {

                                            if ((userInvoiceRequest?.status === "Generated")|| (firmInvoiceRequest?.status === "Generated")) {
                                                buttons += `<a href='#' onclick='cpdTrainingHandler.registerForm("${data}", ${JSON.stringify(JSON.stringify(row))})' type='button' class='btn btn-outline-primary m-1 btn-sm ' title='register'> Register</a>`;
                                            } else if ((userInvoiceRequest?.status === "Pending") || (firmInvoiceRequest?.status === "Pending")) {
                                                return buttons; // Return buttons if invoice is pending
                                            }
                                        }

                                         // Check if the training is free
                                        if (row.isFree) {
                                            buttons += `<a href='#' onclick='cpdTrainingHandler.registerForm("${data}", ${JSON.stringify(JSON.stringify(row))})' type='button' class='btn btn-outline-primary m-1 btn-sm ' title='register'> Register for Free</a>`;
                                        } else if (((!userInvoiceRequest || userInvoiceRequest.status !== "Generated") && ( !firmInvoiceRequest || firmInvoiceRequest?.status !== "Generated")) && (@ViewBag.MemberId != 0)) {
                                            buttons += `<a href='#' onclick='cpdTrainingHandler.invoiceForm("${data}", ${JSON.stringify(JSON.stringify(row))})' type='button' class='btn btn-outline-warning m-1 btn-sm ' title='Invoice'>Request Invoice</a>`;
                                        }

                                        return buttons;
                                    } else {
                                        return buttons;
                                    }
                                } else {
                                    return "<a href='/member/CPDTrainings/TrainingDetails/" + data + "' type='button' class='btn btn-outline-primary mx-1 btn-sm ti ti-eye text-lg' title='show details'> View </a>";
                                }
                            }
                            if (memberRegistration && memberRegistration.registrationStatus === "Attended") {
                                return `<a href='#' onclick='cpdTrainingHandler.generateCertificate(${data})' type='button' class='btn btn-outline-success m-1 btn-sm' title='Generate Certificate'>Certificate</a> <a href='/member/CPDTrainings/TrainingDetails/${data}' type = 'button' class='btn btn-outline-primary mx-1 btn-sm ti ti-eye text-lg' title = 'show details'> View </a>`;
                            } else {
                                return "<a href='/member/CPDTrainings/TrainingDetails/" + data +"' type = 'button' class='btn btn-outline-primary mx-1 btn-sm ti ti-eye text-lg' title = 'show details'> View </a>";
                            }
                        }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });


        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-MW', {
                style: 'currency',
                currency: 'MWK',
                minimumFractionDigits: 0
            }).format(amount);
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
