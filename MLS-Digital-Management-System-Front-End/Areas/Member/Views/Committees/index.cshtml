@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Committes";
    Layout = "~/Areas/Member/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
}

@section Styles {

    <style>
           .hidden {
                display: none;
                }
            .fees-column {
                padding: 10px;
            }

            .fee-item {
                margin-bottom: 5px;
            }
    </style>


}


<div class="card  w-100 h-100 d-flex justify-content-center">
    <div class="card-body">
      
       <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
        

       
        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center"> Committee's List</strong></h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="committee_table">
                <thead>
                    <tr>
                        <th>
                           Committee Name
                        </th>
                        <th>
                           Description
                        </th>
                        <th>
                            Practicing Year
                        </th>
                        <th>
                            Chairperson
                        </th>
                        
                        
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts{

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
    </script>
     <script src="~/js/Committee.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#committee_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/Committees/paged",
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },

                   

                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "committeeName",
                        name: "committeeName",
                        className: "text-left",
                        "orderable": true,
                    },
                    {
                        data: "description",
                        name: "description",
                        className: "text-left",
                        "orderable": false,
                    },
                     {
                        data: "yearOfOperation.formatedDate",
                        name: "yearOfOperation",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "chairperson.user.fullName",
                        name: "chairperson.user.fullName",
                        className: "text-left",
                        "orderable": false,
                    },
                    
                     
                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                                   
                                   let loggedInUserId = `@ViewBag.UserId`; 
                                    let isUserInCommittee = row.committeeMemberships.find(reg => reg.memberShipId === loggedInUserId);

                                    if(isUserInCommittee){
                                        
                                       return  `<a href='/member/threads?committeeId=${data}'  type='button' class='btn btn-outline-success mx-1 btn-sm ti  ti-hand-point-down' title='show threads'>Threads</a>
                                            <a href='#' data-id='${data}' data-token='${tokenValue}' type='button' onclick='committeeHandler.exitCommittee(event)' title='delete' class='ti ti-trash red-icon btn btn-outline-danger btn-sm my-1 mx-1'>Exit</a>`
                                    }
                                    else{
                                        return `<a href='#' data-id='${data}' data-token='${tokenValue}' onclick='committeeHandler.joinCommittee(event)' type='button' class='btn btn-outline-primary mx-1 btn-sm' title='edit'> <i class='bi bi-plus'></i> Join</a>`;
                                        
                                    }
                                }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
