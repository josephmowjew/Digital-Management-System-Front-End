@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Institution Types";
    Layout = "~/Areas/CEO/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
}



<div class="card">
    <div class="card-body">
        <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-info my-3" data-bs-toggle="modal" data-bs-target="#create_firm_modal">
            Create Institution Type
        </button>

        <!-- Modal -->
        <div class="modal fade" id="create_firm_modal" tabindex="-1" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <partial name="_CreateInstitutionTypePartial" />
        </div>

        <div class="modal fade" id="edit_firm_modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
            aria-hidden="true">
            <partial name="_EditInstitutionTypePartial" />
        </div>
        
        <h5 class="card-title fw-semibold mb-4 text-uppercase">Available Institution Types</h5>

        <div class="table-responsive">
            <table class="table table-bordered " id="my_table">
                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Date Created
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = "@host";
    </script>

    <script src="~/js/InstitutionType.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#my_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/InstitutionTypes/paged",
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },


                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "name",
                        name: "name",
                        className: "text-left",
                        "orderable": true,
                    },
                    {
                        data: "createdDate",
                        name: "createdDate",
                        className: "text-left",
                        "orderable": true,
                        render: function(data, type, row) {
                            // Create a new Date object from the raw date string
                            const date = new Date(data);
                            // Format the date to a more readable format
                            return date.toLocaleDateString('en-US', {
                                year: 'numeric',
                                month: 'long',
                                day: 'numeric',
                                hour: '2-digit',
                                minute: '2-digit',
                                second: '2-digit',
                                hour12: true // Change to false for 24-hour format
                            });
                        }
                    },
                    {
                        data: "status",
                        name: "status",
                        className: "text-left",
                        "orderable": false,
                    },

                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                            let links = "";
                            if (row.status.toLowerCase() == "pending") {
                                links += "<a href='#' onclick='Activate(\"" + data + "\",\"" + tokenValue + "\")' type='button' class='btn btn-outline-success mx-1 btn-sm ti ti-check' my-1 title='activate'>Activate</a>";
                                links += "<a href='#' onclick='DenyForm(\"" + data + "\",\"" + tokenValue + "\")' type='button' class='btn btn-outline-danger mx-1 btn-sm ti ti-hand-stop my-1' title='Deny'>Deny</a>";

                            }
                            links += "<a href='#' onclick='EditForm(\"" + data + "\",\"" + tokenValue + "\")' type='button' class='btn btn-outline-primary mx-1 btn-sm ti ti-pencil' title='edit' >Edit</a> <a href='#' type='button' onclick='Delete(\"" + data + "\",\"" + tokenValue + "\")' title='delete' class='ti ti-trash red-icon btn btn-outline-danger my-1 btn-sm' >Delete</a>"
                            return links;
                        }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}