@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "License Applications";
    Layout = "~/Areas/Member/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
}

@section Styles {

    <style>
           .hidden {
  display: none;
}
    </style>


}



<div class="card  w-100 h-100 d-flex justify-content-center">
    <div class="card-body">
      
       <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
        
         <!-- Modal -->
        <div class="modal fade" id="register_cpd_training_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_RegisterTrainingPartial" />
        </div>

        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center"> CPD's In Operating Year <strong>(@ViewBag.YearOfOperation.FormatedDate)</strong></h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="cpd_table">
                <thead>
                    <tr>
                        <th>
                           Title
                        </th>
                        <th>
                           Duration(Hours)
                        </th>
                        <th>
                            Event Date
                        </th>
                         <th>
                            Fee
                        </th>
                        <th>
                           CPD Units 
                        </th>
                        <th>
                            Accrediting Institution
                        </th>
                        <th>
                            Reg Status
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts{

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
    </script>
    <script>
      $(function () {
        $('[data-toggle="tooltip"]').tooltip()
        })
     </script>
     <script src="~/js/CPDTraining.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#cpd_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/CPDTrainings/paged",
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },
                    

                   

                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "title",
                        name: "title",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "duration",
                        name: "duration",
                        className: "text-left",
                        "orderable": false,
                        render: function(data, type, row) {
                            return data;
                        }
                    },
                    {
                        data: "dateToBeConducted",
                        name: "dateToBeConducted",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: null,
                        name: "fees",
                        title: "Fees",
                        className: "text-left fees-column",
                        "orderable": false,
                        render: function(data, type, row) {
                            var fees = [];

                            if (row.cpdTrainingRegistration && row.cpdTrainingRegistration.length > 0) {
                                const memberRegistration = row.cpdTrainingRegistration.find(registration => registration.memberId == @ViewBag.MemberId);
                                if (memberRegistration) {
                                    const formattedFee = formatCurrency(memberRegistration.fee);
                                    fees.push(`<div class="fee-item"><strong>Amount Paid:</strong> <span class="badge bg-dark bg-opacity-85">${formattedFee}</span></div>`);
                                    return fees.join('');
                                }
                            }

                            const renderFeeItem = (label, fee, badgeClass) => {
                                if (fee) {
                                    const formattedFee = formatCurrency(fee);
                                    fees.push(`<div class="fee-item"><strong>${label}:</strong> <span class="badge ${badgeClass} bg-opacity-85">${formattedFee}</span></div>`);
                                }
                            };

                            renderFeeItem('Member Physical', row.memberPhysicalAttendanceFee, 'bg-primary');
                            renderFeeItem('Member Virtual', row.memberVirtualAttendanceFee, 'bg-success');
                            renderFeeItem('Non-Member Physical', row.nonMemberPhysicalAttendanceFee, 'bg-warning');
                            renderFeeItem('Non-Member Virtual', row.nonMemberVirtualAttandanceFee, 'bg-info');

                            return fees.length > 0 ? fees.join('') : 'Free CPD';
                        }
                    },

                    {
                        data: "cpdUnitsAwarded",
                        name: "cpdUnitsAwarded",
                        className: "text-left",
                        "orderable": true,
                    },
                     {
                        data: "accreditingInstitution",
                        name: "accreditingInstitution",
                        className: "text-left",
                        "orderable": true,
                    },
                    {
                        data: "cpdTrainingRegistration",
                        name: "cpdTrainingRegistration",
                        orderable: false,
                        render: function(data, type, row) {
                            const registration = row.cpdTrainingRegistration.find(reg => reg.memberId === @ViewBag.MemberId);
                            if (!registration) return "<span class='badge bg-danger bg-opacity-85 rounded-pill'>Not Registered</span>";

                            const { registrationStatus, deniedReason } = registration;
                            const badgeClasses = {
                                Attended: "bg-success",
                                Pending: "bg-secondary",
                                Denied: "bg-danger",
                                default: "bg-warning"
                            }[registrationStatus] || "bg-warning";

                            const badge = `<span class='badge ${badgeClasses} bg-opacity-85 rounded-pill' ${registrationStatus === "Denied" ? `data-toggle='tooltip' data-placement='right' title='${deniedReason}'` : ""}>${registrationStatus}</span>`;
                            return badge;
                        }
                    },
                  
                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {  
                                   
                                    var memberRegistration = row.cpdTrainingRegistration.find(registration => registration.memberId == @ViewBag.MemberId);
                                    
                                    if(memberRegistration == null || memberRegistration == undefined) {
                                        
                                     return "<a href='#' onclick='cpdTrainingHandler.registerForm(\"" + data + "\",\"" + JSON.stringify(row).replace(/"/g, "\\\"")  + "\")' type='button' class='btn btn-outline-primary my-1 btn-sm ' title='register' ><span class='bi bi-file-plus' style='font-size: 0.9rem;'></span> Register</a> "
                                        
                                    }
                                }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });

        
function formatCurrency(amount) {
    return new Intl.NumberFormat('en-MW', {
        style: 'currency',
        currency: 'MWK',
        minimumFractionDigits: 0
    }).format(amount);
}
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
