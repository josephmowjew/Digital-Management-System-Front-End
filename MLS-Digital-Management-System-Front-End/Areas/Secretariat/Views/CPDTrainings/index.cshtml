@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "License Applications";
    Layout = "~/Areas/Secretariat/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
}

@section Styles {

    <style>
           .hidden {
                display: none;
                }
            .fees-column {
                padding: 10px;
            }

            .fee-item {
                margin-bottom: 5px;
            }
    </style>


}


<div class="card  w-100 h-100 d-flex justify-content-center">
    <div class="card-body">
      
       <div>
            <img src="~/assets/images/91.gif" id="spinner" />
        </div>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-info my-3" data-bs-toggle="modal" data-bs-target="#create_cpd_modal">
            Add New CPD Training
        </button>

         <!-- Modal -->
        <div class="modal fade" id="create_cpd_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_CreateCPDPartial" />
        </div>
        <!-- Modal -->
        <div class="modal fade" id="edit_cpd_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <partial name="_EditCPDPartial" />
        </div>

        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center"> CPD's In Practice Year <strong>(@ViewBag.YearOfOperation.FormatedDate)</strong></h5>

        <div class="table-responsive">
            <table class="table table-bordered table-hover" id="cpd_table">
                <thead>
                    <tr>
                        <th>
                           Title
                        </th>
                        <th>
                           Duration(Hours)
                        </th>
                        <th>
                            Event Date
                        </th>
                        <th>
                            Fee
                        </th>
                        <th>
                            Units Awarded
                        </th>
                        <th>
                            AccreditingInstitution
                        </th>
                        <th>
                            Poster
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts{

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
    </script>
    <script src="~/js/FileUploadHandler.js" asp-append-version="true"></script>
     <script src="~/js/CPDTraining.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#cpd_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: "@host/api/CPDTrainings/paged",
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    },

                   

                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [
                    {
                        data: "title",
                        name: "title",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "duration",
                        name: "duration",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "dateToBeConducted",
                        name: "dateToBeConducted",
                        className: "text-left",
                        "orderable": false,
                    },

                    {
                        data: null,
                        name: "fees",
                        title: "Fees",
                        className: "text-left fees-column",
                        "orderable": false,
                        render: function(data, type, row) {
                            var fees = [];

                        if (row.memberPhysicalAttendanceFee) {
                            const formattedFee = new Intl.NumberFormat('en-MW', {
                            style: 'currency',
                            currency: 'MWK',
                            minimumFractionDigits: 0
                        }).format(row.memberPhysicalAttendanceFee);
                            fees.push('<div class="fee-item"><strong>Member Physical:</strong> <span class="badge bg-primary bg-opacity-85">' + formattedFee + '</span></div>');
                        }

                        if (row.memberVirtualAttendanceFee) {
                            const formattedFee = new Intl.NumberFormat('en-MW', {
                            style: 'currency',
                            currency: 'MWK',
                            minimumFractionDigits: 0
                        }).format(row.memberVirtualAttendanceFee);
                            fees.push('<div class="fee-item"><strong>Member Virtual:</strong> <span class="badge bg-success bg-opacity-85">' + formattedFee + '</span></div>');
                        }

                        if (row.nonMemberPhysicalAttendanceFee) {
                            const formattedFee = new Intl.NumberFormat('en-MW', {
                            style: 'currency',
                            currency: 'MWK',
                            minimumFractionDigits: 0
                        }).format(row.nonMemberPhysicalAttendanceFee);
                            fees.push('<div class="fee-item"><strong>Non-Member Physical:</strong> <span class="badge bg-warning bg-opacity-85">' + formattedFee + '</span></div>');
                        }

                        if (row.nonMemberVirtualAttandanceFee) {
                            const formattedFee = new Intl.NumberFormat('en-MW', {
                            style: 'currency',
                            currency: 'MWK',
                            minimumFractionDigits: 0
                        }).format(row.nonMemberVirtualAttandanceFee);
                            fees.push('<div class="fee-item"><strong>Non-Member Virtual:</strong> <span class="badge bg-info bg-opacity-85">' + formattedFee + '</span></div>');
                        }

                        return fees.length > 0 ? fees.join('') : 'Free CPD';
                        }
                    },
                    {
                        data: "cpdUnitsAwarded",
                        name: "cpdUnitsAwarded",
                        className: "text-left",
                        "orderable": true,
                    },
                     {
                        data: "accreditingInstitution",
                        name: "accreditingInstitution",
                        className: "text-left",
                        "orderable": true,
                    },
                     {
                        data: "attachments",
                        name: "attachments",
                        className: "text-left",
                        "orderable": true,
                        render: function(data, type, row, meta) {
                            if (data && data.length > 0) {
                            return data.map((attachment) => {
                                return `<a href="@host/${attachment.filePath}" data-lightbox="image-1" title="${attachment.fileName}" > <img src="@host/${attachment.filePath}"  alt="cpd poster"  class="w-50 h-50"> </a>`;
                            }).join('<br>');
                            } else {
                            return '';
                            }
                        }
                        },
                  
                    {
                        data: "id",
                        name: "id",
                        "orderable": false,
                        render: function (data, type, row) {
                                  
                                    return `<a href='#' onclick='cpdTrainingHandler.editForm(${data},"${tokenValue}")' type='button' class='btn btn-outline-primary mx-1 btn-sm ti ti-pencil' title='edit' >Edit</a> 
                                    <a href='#' type='button' onclick='cpdTrainingHandler.delete(${data}, "${tokenValue}")' title='delete' class='ti ti-trash red-icon btn btn-outline-danger btn-sm my-1 mx-1'>Delete</a>
                                    <a class='btn btn-outline-primary btn-sm mx-1 position-relative' href='/Secretariat/CPDTrainingRegistrations?cpdTrainingId=${data}' type='button'> <span class='position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary'>${row.numberOfPendingRegistrations}</span> View Applications</a>`
                                }
                    }
                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
