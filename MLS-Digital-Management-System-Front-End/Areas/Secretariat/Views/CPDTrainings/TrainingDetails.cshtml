@using Microsoft.Extensions.Configuration
@using System.Globalization
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "CPD Trainings";
    Layout = "~/Areas/Secretariat/Views/shared/_Layout.cshtml";

    var host = Configuration.GetSection("APIURL")["Link"];
    var apiPrefix = Configuration.GetSection("APISettings")["API_Prefix"];
}

<div>
    <img src="~/assets/images/91.gif" id="spinner" />
</div>

<div class="d-flex justify-content-between align-items-center mb-5">
    <div>
        <a asp-action="index" asp-controller="cpdtrainings" asp-area="secretariat" class="btn btn-secondary p-1">
            <i class="bi bi-chevron-double-left"></i>
            Back
        </a>
    </div>

    <div class="row gap-0">
        <div class="col-6">
            <a href='#' onclick='cpdTrainingHandler.editForm(@ViewBag.training.Id, "@ViewBag.token")'
                class='btn btn-outline-primary btn-sm ti ti-pencil' title='edit'>Edit</a>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="edit_cpd_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <partial name="_EditCPDPartial" />
</div>


<div class="row mb-4 px-3">
    <div class="col-12 col-md-8">
        <div class="py-2">
            <h1 class="fs-4">
                Training: @ViewBag.training.Title
            </h1>
        </div>
        <ul style="list-style-type: disc; padding-left">
            <li><strong>Venue:</strong> @ViewBag.training.PhysicalVenue</li>
            <li><strong>Date:</strong> @ViewBag.training.DateToBeConducted.ToString("yyyy-MM-dd")</li>
            <li><strong>Accrediting Institution:</strong> @ViewBag.training.AccreditingInstitution</li>
            <li><strong>Duration (Hours):</strong> @ViewBag.training.Duration</li>
            <li>
                <strong>Fees:</strong>
                <ul>
                    @if (ViewBag.training.IsCategorizedForMembers)
                    {
                        <li class="py-1">Physical Attendance (Senior Lawyers): <span
                                class="badge bg-primary bg-opacity-85">@ViewBag.training.SeniorLawyerPhysicalAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                        <li class="py-1">Virtual Attendance (Senior Lawyers): <span
                                class="badge bg-success bg-opacity-85">@ViewBag.training.SeniorLawyerVirtualAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                        <li class="py-1">Physical Attendance (Junior Lawyers): <span
                                class="badge bg-primary bg-opacity-85">@ViewBag.training.JuniorLawyerPhysicalAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                        <li class="py-1">Virtual Attendance (Junior Lawyers): <span
                                class="badge bg-success bg-opacity-85">@ViewBag.training.JuniorLawyerVirtualAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                    }
                    else
                    {
                        <li class="py-1">Physical Attendance (Members): <span
                                class="badge bg-primary bg-opacity-85">@ViewBag.training.MemberPhysicalAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                        <li class="py-1">Virtual Attendance (Members): <span
                                class="badge bg-success bg-opacity-85">@ViewBag.training.MemberVirtualAttendanceFee?.ToString("C",
                                new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                        </li>
                    }
                    <li class="py-1">Physical Attendance (Non-Members): <span
                            class="badge bg-warning bg-opacity-85">@ViewBag.training.NonMemberPhysicalAttendanceFee?.ToString("C",
                            new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                    </li>
                    <li class="py-1">Virtual Attendance (Non-Members): <span
                            class="badge bg-info bg-opacity-85">@ViewBag.training.NonMemberVirtualAttandanceFee?.ToString("C",
                            new CultureInfo("en-MW") { NumberFormat = { CurrencySymbol = "MWK" } })</span>
                    </li>
                </ul>
            </li>
        </ul>
    </div>

    <div class="col-12 col-md-4">
        @{
            var firstAttachment = ViewBag.training.Attachments?.Count > 0 ? ViewBag.training.Attachments[0] : null;
        }

        @if (firstAttachment != null)
        {
            <a href="@firstAttachment.FilePath" data-lightbox="image-1"
                class="d-flex justify-content-center align-items-center">
                <img src="@firstAttachment.FilePath" alt="cpd poster" class="w-75 h-75" />
            </a>
        }
    </div>
</div>

<div class="card ">
    <div class="card-body">

        <h5 class="card-title fw-semibold mb-4 text-uppercase text-center fs-4">Available Registered Members</h5>

        <div class="table-responsive">
            <div class="d-flex justify-content-end align-items-center mb-2">
              <button id="downloadAttendedButton" class="btn btn-primary" data-training-id="@ViewBag.training.Id">Download</button>  
            </div>
            <table class="table table-bordered " id="cpd_table">
                <thead>
                    <tr>
                        <th>

                        </th>
                        <th>
                            Member Name
                        </th>
                        <th>
                            Registration Status
                        </th>
                        <th>
                            Payment Proof
                        </th>
                        <th>
                            Date Of Payment
                        </th>

                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer">
        <button type="button" class="btn btn-success my-3" onclick="cpdTrainingHandler.markAttendance()">Mark
            Attendance</button>
    </div>
</div>


@section Scripts {

    <script>
        var datatable;
        var tokenValue = '@ViewBag.token';
        var host = '@host';
        var trainingDetails = {
            title: '@ViewBag.training.Title',
            venue: '@ViewBag.training.PhysicalVenue',
            date: '@ViewBag.training.DateToBeConducted.ToString("yyyy-MM-dd")',
            duration: '@ViewBag.training.Duration'
        };
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://unpkg.com/jspdf-autotable@3.5.22/dist/jspdf.plugin.autotable.js"></script>
    <script src="~/js/DownloadsHandle.js" asp-append-version="true"></script>
    <script src="~/js/FileUploadHandler.js" asp-append-version="true"></script>
    <script src="~/js/CPDTraining.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            datatable = $('#cpd_table').DataTable({


                "processing": true,
                "serverSide": true,
                "order": [[0, "desc"]],
                ajax: {
                    url: '@host/api/cpdtrainingregistrations/paged?cpdtrainingId=@ViewBag.training.Id',
                    type: 'get',
                    datatype: 'Json', headers: {
                        'Authorization': 'Bearer @ViewBag.token'
                    }

                },
                columnDefs: [
                    {
                        defaultContent: "",
                        targets: "_all",
                        'orderable': true
                    },
                ],
                columns: [

                    {
                        data: "id",
                        name: "id",
                        className: "text-center",
                        orderable: false,
                        defaultContent: "",
                        render: function (data, type, row) {
                            return `<input type="checkbox" class="cpdTrainingCheckbox" data-id="${row.id}">`;
                        }
                    },
                    {
                        data: "member.user.fullName",
                        name: "member",
                        className: "text-left",
                        "orderable": false,
                    },
                    {
                        data: "registrationStatus",
                        name: "registrationStatus",
                        "orderable": false,
                        render: function (data, type, row) {

                            if (data == "Attended") {
                                return `<span class='badge bg-success bg-opacity-85 rounded-pill'>${data}</span>`
                            }
                            if (data == "Pending") {
                                return `<span class='badge bg-secondary bg-opacity-85 rounded-pill'>${data}</span>`
                            }
                            else if (data == "Denied") {
                                return `<span class='badge bg-danger bg-opacity-85 rounded-pill' data-toggle='tooltip' data-placement='right' title='${row.deniedReason}'>${data}</span>`
                            }
                            else {
                                return `<span class='badge bg-warning bg-opacity-85 rounded-pill'>${data}</span>`
                            }



                        }
                    },
                    {
                        data: "attachments",
                        name: "attachments",
                        className: "text-left",
                        "orderable": true,
                        render: function (data, type, row, meta) {
                            if (data && data.length > 0) {
                                return data.map((attachment) => {
                                    return `<a href="@host@apiPrefix/${attachment.filePath}" target="_blank" download="${attachment.fileName}">Attachment <i class="bi bi-paperclip"></i></a>`;
                                }).join('<br>');
                            } else {
                                return '';
                            }
                        }
                    },

                    {
                        data: "dateOfPayment",
                        name: "dateOfPayment",
                        className: "text-left",
                        orderable: false,
                        render: function (data, type, row) {
                            if (data) {
                                // Assuming the date is in ISO format (e.g., "2024-05-16T00:00:00")
                                // Extract the date portion and return it
                                var date = new Date(data);
                                var day = ("0" + date.getDate()).slice(-2);
                                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                                var year = date.getFullYear();
                                return year + '-' + month + '-' + day;
                            }
                            return '';
                        }
                    },




                ],
                responsive: true,
                "autoWidth": false,
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}